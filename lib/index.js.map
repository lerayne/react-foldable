{"version":3,"sources":["../src/index.jsx"],"names":["Foldable","props","state","expanded","bodyStyle","carrotStyle","timeout","animationSpeed","speed","onToggle","title","children","className","animationStyle","transition","classNames","main","join","cursor","toggle","childrenContainer","element","onHeightReady","height","close","open","setState","clearTimeout","setTimeout","offsetHeight","transform","Component"],"mappings":"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","file":"index.js","sourcesContent":["/**\r\n * Created by M. Yegorov on 2016-04-29.\r\n */\r\n\r\nimport ReactHeight from 'react-height';\r\n\r\nimport css from './Foldable.css';\r\n\r\nimport Test from './Test';\r\n\r\nexport default class Foldable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            expanded: props.expanded || false,\r\n            bodyStyle: {},\r\n            carrotStyle: {},\r\n            timeout: false,\r\n            animationSpeed: props.speed || 200\r\n        };\r\n\r\n        if (typeof this.props.onToggle == 'function') {\r\n            this.onToggle = () => {\r\n                this.props.onToggle();\r\n            }\r\n        } else {\r\n            this.onToggle = () => {\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {title, children, className}  = this.props;\r\n        const {bodyStyle, carrotStyle, animationSpeed} = this.state;\r\n\r\n        const animationStyle = {\r\n            transition: `all ${animationSpeed}ms ease`\r\n        };\r\n\r\n        const classNames = [\r\n            css.main,\r\n            className\r\n        ];\r\n\r\n        return <div className={classNames.join(' ')}>\r\n            <div className=\"caption\" style={{cursor:'pointer'}} onClick={e => this.toggle()}>\r\n                <span className=\"carrot\" style={{...animationStyle, ...carrotStyle}}/>\r\n                <span className=\"title\">{title}</span>\r\n            </div>\r\n            <div className=\"body\" style={{...animationStyle, ...bodyStyle}}>\r\n                <div ref={element => this.childrenContainer = element} className=\"children-container\">\r\n                    <ReactHeight onHeightReady={height => this.onHeightReady(height)}>\r\n                        {children}\r\n                    </ReactHeight>\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    toggle() {\r\n        if (this.state.expanded) {\r\n            this.close()\r\n        } else {\r\n            this.open()\r\n        }\r\n    }\r\n\r\n    onHeightReady(height) {\r\n\r\n        if (this.state.expanded) {\r\n            this.setState({\r\n                bodyStyle: {height: height},\r\n            }, () => {\r\n                if (typeof this.props.onHeightReady == 'function') {\r\n                    this.props.onHeightReady(height)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    open() {\r\n        if (!this.state.expanded) {\r\n\r\n            if (this.state.timeout) {\r\n                clearTimeout(this.state.timeout)\r\n            }\r\n\r\n            const timeout = setTimeout(()=> {\r\n                this.setState({\r\n                    bodyStyle: {height: this.childrenContainer.offsetHeight},\r\n                    carrotStyle: {transform: 'rotate(0deg)'}\r\n                });\r\n\r\n                this.onToggle();\r\n            });\r\n\r\n            this.setState({\r\n                expanded: true,\r\n                timeout\r\n            });\r\n        }\r\n    }\r\n\r\n    close() {\r\n        if (this.state.expanded) {\r\n\r\n            if (this.state.timeout) {\r\n                clearTimeout(this.state.timeout)\r\n            }\r\n\r\n            const timeout = setTimeout(()=> {\r\n                this.setState({\r\n                    expanded: false\r\n                });\r\n\r\n                this.onToggle();\r\n            }, this.state.animationSpeed);\r\n\r\n            this.setState({\r\n                bodyStyle: {},\r\n                carrotStyle: {},\r\n                timeout\r\n            });\r\n        }\r\n    }\r\n}"]}